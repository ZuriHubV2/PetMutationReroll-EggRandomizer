-- Launcher (loads your GitHub scripts; keeps their logic intact)
-- Put this in your  executor and run.

-- ===========================
-- CONFIG
-- ===========================
local MUTATION_URL = "https://raw.githubusercontent.com/ZuriHubV2/petmutation.lua/refs/heads/main/lua"
local EGG_URL      = "https://raw.githubusercontent.com/ZuriHubV2/EggRandomizer/refs/heads/main/ZuriHub_Luarmor_lua"

-- List of possible GUI names the loaded scripts may create (we'll try to remove these before launching)
local KNOWN_TOOL_GUI_NAMES = {
    "PetMutationReroll_UI", "PetMutation", "PetMutation_UI", "PetRandomizer_UI",
    "PetHatchGui", "PetRandomizer", "EggWindow", "MutationWindow", "EggRandomizer",
    "MutationRerollUI", "MutationReroll"
}

-- ===========================
-- SERVICES
-- ===========================
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- ===========================
-- UTILITIES
-- ===========================
local function tween(obj, props, time, style, dir)
    style = style or Enum.EasingStyle.Quad
    dir = dir or Enum.EasingDirection.Out
    return TweenService:Create(obj, TweenInfo.new(time or 0.25, style, dir), props)
end

local function safeHttpGet(url)
    local ok, res = pcall(function() return game:HttpGet(url) end)
    if ok then return true, res else return false, tostring(res) end
end

local function closeKnownToolGUIs()
    for _, child in ipairs(playerGui:GetChildren()) do
        if child:IsA("ScreenGui") and table.find(KNOWN_TOOL_GUI_NAMES, child.Name) then
            pcall(function() child:Destroy() end)
        end
    end
end

-- Remove any other top-level ScreenGuis with those names in the raw global (some executors put them elsewhere)
for _, name in ipairs(KNOWN_TOOL_GUI_NAMES) do
    local s = playerGui:FindFirstChild(name)
    if s then pcall(function() s:Destroy() end) end
end

-- ===========================
-- BUILD LAUNCHER UI
-- ===========================
local launcherGui = Instance.new("ScreenGui")
launcherGui.Name = "ZuriHubV2_Launcher"
launcherGui.ResetOnSpawn = false
launcherGui.Parent = playerGui

local main = Instance.new("Frame")
main.Name = "Main"
main.Size = UDim2.new(0, 360, 0, 220)
main.Position = UDim2.new(0.35, 0, 0.33, 0)
main.BackgroundColor3 = Color3.fromRGB(38, 6, 60)
main.BorderSizePixel = 0
main.Parent = launcherGui
local mainCorner = Instance.new("UICorner", main); mainCorner.CornerRadius = UDim.new(0, 12)
local mainStroke = Instance.new("UIStroke", main); mainStroke.Color = Color3.fromRGB(170, 50, 220); mainStroke.Thickness = 2

-- Title
local title = Instance.new("TextLabel", main)
title.Size = UDim2.new(1, -24, 0, 36)
title.Position = UDim2.new(0, 12, 0, 10)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.Text = "ZuriHubV2 — Launcher"
title.TextColor3 = Color3.fromRGB(245,245,250)
title.TextXAlignment = Enum.TextXAlignment.Left

-- Footer text
local footer = Instance.new("TextLabel", main)
footer.Size = UDim2.new(1, -20, 0, 20)
footer.Position = UDim2.new(0, 10, 1, -26)
footer.BackgroundTransparency = 1
footer.Font = Enum.Font.Gotham
footer.TextSize = 13
footer.Text = "Made by ZuriHubV2"
footer.TextColor3 = Color3.fromRGB(200,200,200)
footer.TextXAlignment = Enum.TextXAlignment.Left

-- Exit button (slides out)
local exitBtn = Instance.new("TextButton", main)
exitBtn.Size = UDim2.new(0, 36, 0, 28)
exitBtn.Position = UDim2.new(1, -44, 0, 10)
exitBtn.BackgroundColor3 = Color3.fromRGB(150, 30, 160)
exitBtn.Font = Enum.Font.GothamBold
exitBtn.TextSize = 18
exitBtn.Text = "X"
exitBtn.TextColor3 = Color3.fromRGB(255,255,255)
local exitCorner = Instance.new("UICorner", exitBtn); exitCorner.CornerRadius = UDim.new(0,6)

-- Small status label (for errors / fetch messages)
local statusLabel = Instance.new("TextLabel", main)
statusLabel.Size = UDim2.new(1, -24, 0, 18)
statusLabel.Position = UDim2.new(0, 12, 0, 188)
statusLabel.BackgroundTransparency = 1
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 12
statusLabel.Text = ""
statusLabel.TextColor3 = Color3.fromRGB(230,200,255)
statusLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Button helper that adds hover polish
local function makeButton(parent, labelText, y)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0, 320, 0, 44)
    btn.Position = UDim2.new(0, 20, 0, y)
    btn.BackgroundColor3 = Color3.fromRGB(110, 10, 160)
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 16
    btn.Text = labelText
    local c = Instance.new("UICorner", btn); c.CornerRadius = UDim.new(0,8)
    local stroke = Instance.new("UIStroke", btn); stroke.Color = Color3.fromRGB(220,120,255); stroke.Thickness = 1.2; stroke.Transparency = 0.6

    btn.MouseEnter:Connect(function()
        tween(btn, {Size = UDim2.new(0, 328, 0, 48), BackgroundColor3 = Color3.fromRGB(140,30,200)}, 0.12):Play()
        tween(stroke, {Transparency = 0}, 0.12):Play()
    end)
    btn.MouseLeave:Connect(function()
        tween(btn, {Size = UDim2.new(0, 320, 0, 44), BackgroundColor3 = Color3.fromRGB(110,10,160)}, 0.12):Play()
        tween(stroke, {Transparency = 0.6}, 0.12):Play()
    end)

    return btn
end

local btnOpenMutation = makeButton(main, "Open Mutation Reroll", 64)
local btnOpenEgg = makeButton(main, "Open Egg Randomizer", 122)

-- Dragging main by title area
do
    local dragging, dragInput, dragStart, startPos
    title.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = main.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    title.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- ===========================
-- FUNCTIONS TO LAUNCH TOOLS
-- ===========================
local function launchRemoteScript(url)
    -- 1) close known tool GUIs
    closeKnownToolGUIs()
    -- 2) fetch
    statusLabel.Text = "Fetching script..."
    local ok, res = safeHttpGet(url)
    if not ok then
        statusLabel.Text = "HTTP Get failed: "..tostring(res)
        return false, res
    end

    -- 3) run
    local loaded, err = loadstring(res)
    if not loaded then
        statusLabel.Text = "loadstring failed: "..tostring(err)
        return false, err
    end

    statusLabel.Text = "Running script..."
    local success, runErr = pcall(function() loaded() end)
    if not success then
        statusLabel.Text = "Script error: "..tostring(runErr)
        return false, runErr
    end

    -- success
    statusLabel.Text = ""
    return true
end

-- Reactivate launcher after closing mutation or egg GUIs
local function watchForGuiClose(guiName)
    local gui = playerGui:WaitForChild(guiName, 30)
    if gui then
        gui.AncestryChanged:Connect(function(child, parent)
            if not parent then
                -- GUI closed, reactivate launcher inputs
                main.Active = true
                main.Selectable = true
                btnOpenMutation.Active = true
                btnOpenEgg.Active = true
            end
        end)
    else
        -- if not found after 30s, re-enable anyway
        main.Active = true
        main.Selectable = true
        btnOpenMutation.Active = true
        btnOpenEgg.Active = true
    end
end

btnOpenMutation.MouseButton1Click:Connect(function()
    btnOpenMutation.Active = false
    btnOpenEgg.Active = false
    -- Disable launcher input so it doesn't block input for new GUIs
    main.Active = false
    main.Selectable = false

    local ok, err = launchRemoteScript(MUTATION_URL)
    if not ok then
        warn("Failed to launch mutation script:", err)
        -- Re-enable if failed
        main.Active = true
        main.Selectable = true
        btnOpenMutation.Active = true
        btnOpenEgg.Active = true
    else
        -- Watch for mutation GUI closing to re-enable launcher
        watchForGuiClose("PetMutationReroll_UI")
    end
end)

btnOpenEgg.MouseButton1Click:Connect(function()
    btnOpenEgg.Active = false
    btnOpenMutation.Active = false
    -- Disable launcher input so it doesn't block input for new GUIs
    main.Active = false
    main.Selectable = false

    local ok, err = launchRemoteScript(EGG_URL)
    if not ok then
        warn("Failed to launch egg script:", err)
        -- Re-enable if failed
        main.Active = true
        main.Selectable = true
        btnOpenMutation.Active = true
        btnOpenEgg.Active = true
    else
        -- Watch for egg GUI closing to re-enable launcher
        watchForGuiClose("EggRandomizer")
    end
end)

exitBtn.MouseButton1Click:Connect(function()
    exitBtn.Active = false
    tween(main, {Position = UDim2.new(main.Position.X.Scale, main.Position.X.Offset, 1.5, 0), BackgroundTransparency = 1}, 0.6):Play()
    task.delay(0.6, function()
        if launcherGui and launcherGui.Parent then launcherGui:Destroy() end
    end)
end)

-- ===========================
-- Done
-- ===========================
statusLabel.Text = "Ready — click a button"
